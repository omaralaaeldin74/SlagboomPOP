name: Deploy to Azure Container Instance
 
on:
  push:
    branches:
      - main  # Trigger the workflow on a push to the main branch
 
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
 
    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3
 
      # Step 2: Log in to Azure using Azure CLI
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
 
      # Step 3: Log in to Azure Container Registry (ACR)
      - name: Log in to Azure Container Registry
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}
 
      # Step 4: Build and push the API container image
      - name: Build and Push API Container
        run: |
          API_IMAGE_TAG=${{ secrets.API_IMAGE_TAG }}
          if [ -z "$API_IMAGE_TAG" ]; then
            API_IMAGE_TAG="latest"
          fi
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/api-container:$API_IMAGE_TAG ./API_python
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/api-container:$API_IMAGE_TAG
 
      # Step 5: Build and push the App container image
      - name: Build and Push App Container
        run: |
          APP_IMAGE_TAG=${{ secrets.APP_IMAGE_TAG }}
          if [ -z "$APP_IMAGE_TAG" ]; then
            APP_IMAGE_TAG="latest"
          fi
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/app-container:$APP_IMAGE_TAG ./App_python
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/app-container:$APP_IMAGE_TAG
 
      # Step 6: Deploy both containers to Azure Container Instances
      - name: Deploy to Azure Container Instance
        run: |
          az container create --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name api-container-instance \
            --image ${{ secrets.ACR_NAME }}.azurecr.io/api-container:$API_IMAGE_TAG \
            --registry-login-server ${{ secrets.ACR_NAME }}.azurecr.io \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }} \
            --ports 4000 \
            --environment-variables API_KEY=${{ secrets.API_KEY }} DB_HOST=${{ secrets.DB_HOST }} DB_NAME=${{ secrets.DB_NAME }} DB_USER=${{ secrets.DB_USER }} DB_PASSWORD=${{ secrets.DB_PASSWORD }}
 
          az container create --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name app-container-instance \
            --image ${{ secrets.ACR_NAME }}.azurecr.io/app-container:$APP_IMAGE_TAG \
            --registry-login-server ${{ secrets.ACR_NAME }}.azurecr.io \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }} \
            --ports 5000
