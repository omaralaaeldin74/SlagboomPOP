name: Deploy API and App to Azure Container Instance

on:
  push:
    branches:
      - main  # Trigger de workflow bij push naar de main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Stap 1: Checkout de code
    - name: Checkout code
      uses: actions/checkout@v3

    # Stap 2: Log in bij Azure Container Registry (ACR)
    - name: Log in to Azure Container Registry
      run: |
        echo "${{ secrets.ACR_PASSWORD }}" | docker login slagboomacr.azurecr.io \
          -u ${{ secrets.ACR_USERNAME }} --password-stdin

    # Stap 3: Build en push de API-container
    - name: Build and Push API Container
      run: |
        docker build -t slagboomacr.azurecr.io/api-container:latest ./API_python
        docker push slagboomacr.azurecr.io/api-container:latest

    # Stap 4: Build en push de App-container
    - name: Build and Push App Container
      run: |
        docker build -t slagboomacr.azurecr.io/flask-app-container:latest ./App_python
        docker push slagboomacr.azurecr.io/flask-app-container:latest

    # Stap 5: Log in bij Azure
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Stap 6: Deploy API-container naar Azure Container Instance
    - name: Deploy API to Azure Container Instance
      run: |
        az container create \
          --resource-group ${{ secrets.RESOURCE_GROUP }} \
          --name api-container \
          --image slagboomacr.azurecr.io/api-container:latest \
          --registry-login-server slagboomacr.azurecr.io \
          --registry-username ${{ secrets.ACR_USERNAME }} \
          --registry-password ${{ secrets.ACR_PASSWORD }} \
          --environment-variables VAR1=value1 VAR2=value2 \
          --cpu 1 \
          --memory 1.5 \
          --dns-name-label ${{ secrets.API_DNS_NAME }} \
          --ports 80 \
          --os-type Linux

    # Stap 7: Deploy App-container naar Azure Container Instance
    - name: Deploy App to Azure Container Instance
      run: |
        az container create \
          --resource-group ${{ secrets.RESOURCE_GROUP }} \
          --name flask-app-container \
          --image slagboomacr.azurecr.io/flask-app-container:latest \
          --registry-login-server slagboomacr.azurecr.io \
          --registry-username ${{ secrets.ACR_USERNAME }} \
          --registry-password ${{ secrets.ACR_PASSWORD }} \
          --environment-variables VAR1=value1 VAR2=value2 \
          --cpu 1 \
          --memory 1.5 \
          --dns-name-label ${{ secrets.APP_DNS_NAME }} \
          --ports 80 \
          --os-type Linux

    # Stap 8: Verifieer de API-container deployment
    - name: Verify API Deployment
      run: |
        az container show \
          --resource-group ${{ secrets.RESOURCE_GROUP }} \
          --name api-container

    # Stap 9: Verifieer de App-container deployment
    - name: Verify App Deployment
      run: |
        az container show \
          --resource-group ${{ secrets.RESOURCE_GROUP }} \
          --name flask-app-container
